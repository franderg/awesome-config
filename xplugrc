#!/bin/sh
# If not DOCK'ed output or LAPTOP, then it's likely VGA or Display Port
# used for presenation.  We assume the primary desktop screen (HDMI3) is
# placed left of the internal laptop screen, while during presentations
# the projector is on our right and the laptop screen is the primary.

# Built-in monitor, if any
BUILTIN=LVDS-1

# Cache of active dock display
CACHE=/tmp/xplugd.cache

# Enable logging by writing to a file in /tmp
LOG=/tmp/xplugd.log

TYPE=$1
DEVICE=$2
STATUS=$3
shift 3
DESC=$*

log()
{
    if [ ! -f $LOG -a -n "$LOG" ]; then
	touch $LOG
    fi
    if [ -f $LOG ]; then
	echo "$*" >>$LOG
    fi
}

randr()
{
    #XRANDR="xrandr --nograb"
    XRANDR="xrandr"

    log "CMD: $XRANDR $*"
    output=`$XRANDR $*`
    log $output
}

display()
{
    for file in /sys/class/drm/*/edid; do
	if [ -n "`strings $file | grep S2401W`" ]; then
	    echo "EIZO"
	    return
	fi
	if [ -n "`strings $file | grep U2412M`" ]; then
	    echo "DELL"
	    return
	fi
    done
    echo ""
}

placement()
{
    if [ `hostname` != "troglobit" ]; then
	p="--right-of"
    else
	DISP=`display`
	log "Found display $DISP"
	if [ "$DISP" = "EIZO" ]; then
	    p="--left-of"
	elif [ "$DISP" = "DELL" ]; then
	    p="--right-of"
	else
	    p="--same-as"
	fi
    fi
    log "Placement $p"
    echo $p
}

if [ `hostname` = "luthien" ]; then
    BUILTIN=eDP-1
fi

if [ "$TYPE" != "display" ]; then
#    log "Peripheral $TYPE $STATUS: $DESC"
    case "$TYPE,$STATUS,$DESC" in
        pointer,connected,"SynPS/2 Synaptics TouchPad")
#            xinput disable  $DEVICE
            xinput set-prop $DEVICE "libinput Tapping Enabled" 1
	    xinput set-prop $DEVICE "libinput Natural Scrolling Enabled" 1
            ;;
        keyboard,connected,*)
            setxkbmap -layout se -option ctrl:nocaps
            ;;
    esac
else
    if [ "$STATUS" = "disconnected" ]; then
	randr --output $DEVICE --off
	randr --output $BUILTIN --scale 1x1
    else
	if [ "$DEVICE" = "LVDS-1" -o "$DEVICE" = "eDP-1" ]; then
	    log "NOP $DEVICE already connected"
	    exit 0
	fi
	pos=`placement`
	scale=""
	randr --output $DEVICE --primary $pos $BUILTIN --auto
	if [ "$pos" = "--left-of" ]; then
		pos=1920x432
	elif [ "$pos" = "--right-of" ]; then
		if [ `hostname` = "luthien" ]; then
			pos=0x0
			scale="--scale 0.7x0.7"
		else
			pos=0x432
		fi
	else
		pos=0x0
	fi
	randr --output $BUILTIN --pos $pos $scale
    fi
fi

exit 0

############################### SCRATCH BELOW ###############################
if [ "$STATUS" = "disconnected" ]; then
#    log "Disconnect message for $DEVICE ..."
    if [ -f $CACHE ]; then
	CACHED=`cat $CACHE`
	if [ "$CACHED" = "$DEVICE" ]; then
	    log "Undocked $DEVICE, restoring laptop screen as default."
	    randr --output $DEVICE --off
	    rm $CACHE
	fi
    fi
    exit 0
fi

# Home: Eizo S2401W
# Work: DELL U2412M
DISPLAY=""
for file in /sys/class/drm/*/edid; do
    if   [ -n "`strings $file | grep S2401W`" ]; then
	DISPLAY="EIZO"
	break
    elif [ -n "`strings $file | grep U2412M`" ]; then
	DISPLAY="DELL"
	break
    fi
done

if [ `hostname` = "carbon" ]; then
    #LAPTOP=LVDS-1
    LAPTOP=LVDS-1
    DOCK=DVI-I-1-1
    ALT=HDMI-1
    DESKPOS=--right-of
    PRESPOS=--left-of
else
    LAPTOP=LVDS-1
    ALT=DP-1
    if [ "$DISPLAY" = "EIZO" ]; then
	DOCK=HDMI-3
	DESKPOS=--left-of
    else
	DOCK=HDMI-3
	DESKPOS=--right-of
    fi
    PRESPOS=--right-of
fi

log "DISPLAY : $DISPLAY"
log "LAPTOP  : $LAPTOP"
log "DOCK    : $DOCK"
log "ALT     : $ALT"
log "DESKPOS : $DESKPOS"
log "PRESPOS : $PRESPOS"

if [ "$DEVICE" = "${DOCK}" ]; then
    log "Docked $DEVICE ${DESKPOS} ${LAPTOP}"
    randr --output ${DEVICE} --auto --primary ${DESKPOS} ${LAPTOP}
    echo "$DEVICE" >$CACHE
elif [ "$DEVICE" = "${ALT}" ]; then
    log "Alt $DEVICE, presentation mode"
    if [ `hostname` = "carbon" ]; then
	randr --output ${LAPTOP} --auto --primary ${PRESPOS} ${DEVICE} --auto
    else
	randr --output ${DEVICE} --auto --primary ${DESKPOS} ${LAPTOP} --auto
    fi
    echo "$DEVICE" >$CACHE
elif [ "$DEVICE" != "${LAPTOP}" ]; then
    log "Standalone $DEVICE setup"
    randr --output ${DEVICE} --auto ${PRESPOS} ${LAPTOP} --primary
    echo "$DEVICE" >$CACHE
else
    log "Fallback $DEVICE."
    randr --auto
fi

exit 0
